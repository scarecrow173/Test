//=======================================================================================
//!	@file	:	Wall.cpp
//!	@brief	:	Wallクラスのメンバ関数宣言
//!	@author	:	小山 瑛圭
//!	@date	:	2014/5/01
//!	@par	:	example
//!	@note	:	example
//=======================================================================================
#include "Wall.h"
#include "CollisionBox.h"
#include "GraphicsManager.h"

using namespace AK;
using namespace Collision;
using namespace Graphics;
//=======================================================================================
//		Constants Definitions
//=======================================================================================

//-------------------------------------------------------------
//!	@brief		: コンストラクタ
//-------------------------------------------------------------
Wall::Wall(INode* parent, Vector3 pos, WALL_TYPE type)
	:	GameObject	(parent, pos)
	,	m_type		(type)
{
	F32 width	= 0.f;
	F32 height	= 0.f;

	//	左右・上下でemunもまとめるべきかもしれない
	//	ステージ側でidとして使っているためそのまま
	switch(m_type)
	{
	case WALL_LEFT:
	case WALL_RIGHT:
		width	= 50.f;
		height	= 1000.f;
		break;
	case WALL_TOP:
	case WALL_BOTTOM:
		width	= 1000.f;
		height	= 50.f;
		break;
	default:
		break;
	}

	m_Collision = NEW CollisionBox(pos, Vector3(0, 0, 0), Vector3(0, 0, 0), width, height, 50.f);
}
//-------------------------------------------------------------
//!	@brief		: デストラクタ
//-------------------------------------------------------------
Wall::~Wall()
{

}
//=======================================================================================
//		public method
//=======================================================================================

//-------------------------------------------------------------
//!	@brief		: 更新
//-------------------------------------------------------------
void Wall::Update()
{
	TRACE(1, "Paddle::Update");
}
//=======================================================================================
//		protected method
//=======================================================================================

//=======================================================================================
//		private method
//=======================================================================================

//===============================================================
//	End of File
//===============================================================