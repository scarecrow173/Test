//=======================================================================================
//!	@file	:	IResource.h
//!	@author	:	小山 瑛圭
//!	@date	:	2014/4/28
//=======================================================================================
#pragma once
#include "ReferCountType.h"
namespace AK
{

//=======================================================================================
//!	@class	:	IResource
//!	@brief	:	example
//!	@par	:	example
//!	@note	:	example
//=======================================================================================
class IResource// : public ReferCountType<IResource>
{
public:
	IResource();
	//IResource(const IResource& );
	virtual ~IResource();

	virtual IResource* Clone() PURE;
protected:
	ReferCountType	m_RefCounter;

};
//=======================================================================================
//		inline method
//=======================================================================================
//-------------------------------------------------------------
//!	@brief		: コンストラクタ
//!	@return		: インスタンス
//-------------------------------------------------------------
inline IResource::IResource()
{
	m_RefCounter.AddRef();
}
////-------------------------------------------------------------
////!	@brief		: コピーコンストラクタ
////!	@return		: インスタンス
////-------------------------------------------------------------
//inline IResource::IResource(const IResource& )
//{
//	
//}
//-------------------------------------------------------------
//!	@brief		: デストラクタ
//!	@return		: インスタンス
//-------------------------------------------------------------
inline IResource::~IResource()
{
	m_RefCounter.Release();
}

};
//===============================================================
//	End of File
//===============================================================