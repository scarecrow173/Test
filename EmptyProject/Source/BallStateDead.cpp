//=======================================================================================
//!	@file	:	BallStateDead.cpp
//!	@brief	:	BallStateLaunchStandbyクラスのメンバ関数宣言
//!	@author	:	小山 瑛圭
//!	@date	:	2014/5/01
//!	@par	:	example
//!	@note	:	example
//=======================================================================================

#include "BallStateDead.h"
#include "BallStateLaunchStandby.h"
#include "Ball.h"
#include "SoundManager.h"
using namespace AK;

//=======================================================================================
//		Constants Definitions
//=======================================================================================
static const U32 DEAD_SE_ID = 16;
//-------------------------------------------------------------
//!	@brief		: コンストラクタ
//-------------------------------------------------------------
BallStateDead::BallStateDead()
{
}
//-------------------------------------------------------------
//!	@brief		: デストラクタ
//-------------------------------------------------------------
BallStateDead::~BallStateDead()
{

}
//=======================================================================================
//		public method
//=======================================================================================

//-------------------------------------------------------------
//!	@brief		: example
//!	@param[in]	: example
//!	@return		: example
//-------------------------------------------------------------
void BallStateDead::EntryAction(Ball* stateUser)
{
	Sound::SoundManager::GetInstance()->PlaySE(DEAD_SE_ID, TRUE);
}
//-------------------------------------------------------------
//!	@brief		: example
//!	@param[in]	: example
//!	@return		: example
//-------------------------------------------------------------
void BallStateDead::InputAction(Ball* stateUser)
{
}
//-------------------------------------------------------------
//!	@brief		: example
//!	@param[in]	: example
//!	@return		: example
//-------------------------------------------------------------
void BallStateDead::ExitAction(Ball* stateUser)
{
	stateUser->AddDeathCount();
}
//-------------------------------------------------------------
//!	@brief		: example
//!	@param[in]	: example
//!	@return		: example
//-------------------------------------------------------------
IState<Ball>* BallStateDead::TransitionAction()
{
	if (!Sound::SoundManager::GetInstance()->IsActiveSE(DEAD_SE_ID))
		return NEW BallStateLaunchStandby();
	return this;
}
//=======================================================================================
//		protected method
//=======================================================================================

//=======================================================================================
//		private method
//=======================================================================================

//===============================================================
//	End of File
//===============================================================