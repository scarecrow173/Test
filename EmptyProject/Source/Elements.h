//=======================================================================================
//!	@file	:	Elements.h
//!	@author	:	小山 瑛圭
//!	@date	:	2014/5/02
//=======================================================================================
#pragma once

namespace AK
{
namespace Graphics
{
//=======================================================================================
//!	@class	:	VERTEX_FLOAT2
//!	@brief	:	F32を2つ持っている構造体
//!	@par	:	val[0] == x == u; val[1] == y == v;
//!	@note	:	example
//=======================================================================================
struct VertexFloat2
{
	union
	{
		F32 m[2];
		struct
		{
			F32 x; F32 y;
		};
		struct
		{
			F32 u; F32 v;
		};
	};
};
//=======================================================================================
//!	@class	:	VERTEX_FLOAT3
//!	@brief	:	F32を3つ持っている構造体
//!	@par	:	val[0] == x == u == r; val[1] == y = v == g; val[2] == z == w == b;
//!	@note	:	example
//=======================================================================================
struct VertexFloat3
{
	union
	{
		F32 m[3];
		struct
		{
			F32 x; F32 y; F32 z;

		};
		struct
		{
			F32 u; F32 v; F32 w;
		};
		struct
		{
			F32 r; F32 g; F32 b;
		};
	};
};
//=======================================================================================
//!	@class	:	VERTEX_FLOAT4
//!	@brief	:	F32を2つ持っている構造体
//!	@par	:	val[0] == x == r; val[1] == y = g; val[2] == z == b; val[3] == w == a;
//!	@note	:	example
//=======================================================================================
struct VertexFloat4
{
	union
	{
		F32 m[4];
		struct
		{
			F32 x; F32 y; F32 z; F32 w;
		};
		struct
		{
			F32 r; F32 g; F32 b; F32 a;
		};
	};
};
//=======================================================================================
//!	@class	:	VERTEX_FLOAT4
//!	@brief	:	F32を2つ持っている構造体
//!	@par	:	val[0] == x == r; val[1] == y = g; val[2] == z == b; val[3] == w == a;
//!	@note	:	example
//=======================================================================================
struct VertexARGB
{
	VertexARGB() : color (0) {};
	VertexARGB(U32 _color) : color (_color) {};
	VertexARGB(U8 _a, U8 _r, U8 _g, U8 _b) : a (_a), r (_r), g (_g), b (_b){};
	union
	{
		U32 color;
		struct
		{
			U8 b; U8 g; U8 r; U8 a;
		};
	};
};
//=======================================================================================
//!	@class	:	VERTEX_FLOAT4
//!	@brief	:	F32を2つ持っている構造体
//!	@par	:	val[0] == x == r; val[1] == y = g; val[2] == z == b; val[3] == w == a;
//!	@note	:	example
//=======================================================================================
struct VertexRGBA
{
	VertexRGBA() : color (0) {};
	VertexRGBA(U32 _color) : color (_color){};
	VertexRGBA(U8 _r, U8 _g, U8 _b, U8 _a) : a (_a), r (_r), g (_g), b (_b){};
	union
	{
		U32 color;
		struct
		{
			U8 a; U8 b; U8 g; U8 r;
		};
	};
};

};
};
//===============================================================
//	End of File
//===============================================================