//=======================================================================================
//!	@file	:	Sample.cpp
//!	@brief	:	Sampleクラスのメンバ関数宣言
//!	@author	:	小山 瑛圭
//!	@date	:	2014/5/01
//!	@par	:	example
//!	@note	:	example
//=======================================================================================
#include "ItemSystem.h"
#include "ICollisionObject.h"
#include "GraphicsManager.h"
#include "Stage1.h"

using namespace AK;
using namespace Collision;
using namespace Graphics;
//=======================================================================================
//		Constants Definitions
//=======================================================================================

//-------------------------------------------------------------
//!	@brief		: コンストラクタ
//-------------------------------------------------------------
ItemSystem::ItemSystem(INode* parent)
	:	INode	(parent)
{

}
//-------------------------------------------------------------
//!	@brief		: デストラクタ
//-------------------------------------------------------------
ItemSystem::~ItemSystem()
{
}
//=======================================================================================
//		public method
//=======================================================================================
//-------------------------------------------------------------
//!	@brief		: 更新
//-------------------------------------------------------------
void ItemSystem::Update()
{
}
//-------------------------------------------------------------
//!	@brief		: example
//!	@param[in]	: example
//!	@return		: example
//-------------------------------------------------------------
void ItemSystem::Start()
{
	
}
//-------------------------------------------------------------
//!	@brief		: アイテム取得
//!	@param[in]	: IDが現在のサイズを超えているとアサート
//!	@return		: Item
//-------------------------------------------------------------
Item* ItemSystem::GetItem(const U32 id)
{
	assert(id < m_ItemList.size());
	return m_ItemList[id];
}
//-------------------------------------------------------------
//!	@brief		: アイテム追加
//-------------------------------------------------------------
void ItemSystem::AddItem(Item* item)
{
	m_ItemList.push_back(item);
}
//=======================================================================================
//		protected method
//=======================================================================================

//=======================================================================================
//		private method
//=======================================================================================

//===============================================================
//	End of File
//===============================================================